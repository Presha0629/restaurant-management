{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Presha\\\\Desktop\\\\restaurant-management\\\\src\\\\components\\\\MenuList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button } from 'react-bootstrap';\nimport MenuItemForm from './MenuItemForm';\n\nconst MenuList = () => {\n  const [menu, setMenu] = useState([]);\n  const [editingItem, setEditingItem] = useState(null);\n  useEffect(() => {// Fetch menu items from the server here\n    // and update the state using setMenu\n  }, []);\n\n  const handleAddItem = () => {\n    setEditingItem({\n      name: '',\n      price: ''\n    });\n  };\n\n  const handleEditItem = itemId => {\n    setEditingItem(menu.find(item => item.id === itemId));\n  };\n\n  const handleDeleteItem = itemId => {// Delete the menu item with the given ID from the server\n    // and update the state using setMenu\n  };\n\n  const handleCancel = () => {\n    setEditingItem(null);\n  };\n\n  const handleSubmit = item => {// Save the item to the server and update the state using setMenu and setEditingItem\n  };\n\n  const handleChange = event => {\n    setEditingItem({ ...editingItem,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, editingItem ? /*#__PURE__*/React.createElement(MenuItemForm, {\n    item: editingItem,\n    handleChange: handleChange,\n    handleSubmit: handleSubmit,\n    handleCancel: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    onClick: handleAddItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Add Item\"), /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, menu.map(item => /*#__PURE__*/React.createElement(\"tr\", {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, item.id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, item.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, item.price), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => handleEditItem(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => handleDeleteItem(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"Delete\")))))));\n};\n\nexport default MenuList;","map":{"version":3,"sources":["C:/Users/Presha/Desktop/restaurant-management/src/components/MenuList.js"],"names":["React","useState","useEffect","Table","Button","MenuItemForm","MenuList","menu","setMenu","editingItem","setEditingItem","handleAddItem","name","price","handleEditItem","itemId","find","item","id","handleDeleteItem","handleCancel","handleSubmit","handleChange","event","target","value","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport MenuItemForm from './MenuItemForm';\r\n\r\nconst MenuList = () => {\r\n  const [menu, setMenu] = useState([]);\r\n  const [editingItem, setEditingItem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch menu items from the server here\r\n    // and update the state using setMenu\r\n  }, []);\r\n\r\n  const handleAddItem = () => {\r\n    setEditingItem({ name: '', price: '' });\r\n  };\r\n\r\n  const handleEditItem = (itemId) => {\r\n    setEditingItem(menu.find((item) => item.id === itemId));\r\n  };\r\n\r\n  const handleDeleteItem = (itemId) => {\r\n    // Delete the menu item with the given ID from the server\r\n    // and update the state using setMenu\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setEditingItem(null);\r\n  };\r\n\r\n  const handleSubmit = (item) => {\r\n    // Save the item to the server and update the state using setMenu and setEditingItem\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setEditingItem({\r\n      ...editingItem,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {editingItem ? (\r\n        <MenuItemForm\r\n          item={editingItem}\r\n          handleChange={handleChange}\r\n          handleSubmit={handleSubmit}\r\n          handleCancel={handleCancel}\r\n        />\r\n      ) : (\r\n        <Button onClick={handleAddItem}>Add Item</Button>\r\n      )}\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Price</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {menu.map((item) => (\r\n            <tr key={item.id}>\r\n              <td>{item.id}</td>\r\n              <td>{item.name}</td>\r\n              <td>{item.price}</td>\r\n              <td>\r\n                <Button onClick={() => handleEditItem(item.id)}>Edit</Button>\r\n                <Button onClick={() => handleDeleteItem(item.id)}>Delete</Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MenuList;\r\n"]},"metadata":{},"sourceType":"module"}