{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Presha\\\\Desktop\\\\restaurant-management\\\\src\\\\components\\\\login\\\\LoginForm.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nconst LoginForm = ({\n  handleOnChange,\n  handleOnSubmit,\n  formSwitcher,\n  email,\n  password\n}) => {\n  const [loginType, setLoginType] = useState('');\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-info text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    autoComplete: \"off\",\n    onSubmit: handleOnSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleOnChange,\n    placeholder: \"Enter Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, \"Password \"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleOnChange,\n    placeholder: \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }\n  }, \"Login as:\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: loginType,\n    onChange: event => setLoginType(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"Select one\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"admin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Admin\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"customer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"Customer\"))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#!\",\n    onClick: () => formSwitcher('reset'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"Forgot Password?\")), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#!\",\n    onClick: () => formSwitcher('signup'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Forgot Password?\"))));\n};\n\nLoginForm.propTypes = {\n  handleOnChange: PropTypes.func.isRequired,\n  handleOnSubmit: PropTypes.func.isRequired,\n  formSwitcher: PropTypes.func.isRequired,\n  email: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired\n};\nexport default LoginForm; // const LoginForm = ({handleOnChange, handleOnSubmit, formSwitcher, email, password}) => {\n//   return (\n//     <Container>\n//         <Row>\n//             <Col>\n//             <h1 className=\"text-info text-center\">Login</h1>  \n//             <hr />\n//             <Form autoComplete =\"off\" onSubmit={handleOnSubmit}>\n//                 <Form.Group>\n//                     <Form.Label>Email Address</Form.Label>\n//                     <Form.Control\n//                     type=\"email\"\n//                     name=\"email\"\n//                     value = {email}\n//                     onChange={handleOnChange}\n//                  \n//    placeholder=\"Enter Email\"\n//                     required\n//                     />\n//                 </Form.Group>\n//                 <Form.Group>\n//                     <Form.Label>Password </Form.Label>\n//                     <Form.Control\n//                         type=\"password\"\n//                         name=\"password\"\n//                         value = {password}\n//                         onChange = {handleOnChange}\n//                         placeholder=\"password\"\n//                         required\n//                     />\n//                 </Form.Group>\n//                 <Button type = \"submit\">Customer Login</Button>\n//             </Form> \n//             <hr/>\n//             </Col>\n//         </Row>\n//         <Row>\n//             <Col>\n//             <a href=\"#!\" onClick={() => formSwitcher('reset')}>Forgot Password?</a>\n//             </Col>\n//         </Row>\n//     </Container>\n//   );\n// }\n// LoginForm.propTypes = {\n//     handleOnChange: PropTypes.func.isRequired, \n//     handleOnSubmit: PropTypes.func.isRequired, \n//     formSwitcher: PropTypes.func.isRequired,\n//     email: PropTypes.string.isRequired, \n//     password: PropTypes.string.isRequired }\n// export default LoginForm;","map":{"version":3,"sources":["C:/Users/Presha/Desktop/restaurant-management/src/components/login/LoginForm.js"],"names":["React","useState","Container","Row","Col","Form","Button","PropTypes","LoginForm","handleOnChange","handleOnSubmit","formSwitcher","email","password","loginType","setLoginType","event","target","value","propTypes","func","isRequired","string"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LoginForm = ({handleOnChange, handleOnSubmit, formSwitcher, email, password}) => {\r\n  const [loginType, setLoginType] = useState('');\r\n\r\n  return (\r\n    <Container>\r\n        <Row>\r\n            <Col>\r\n            <h1 className=\"text-info text-center\">Login</h1>  \r\n            <hr />\r\n            <Form autoComplete=\"off\" onSubmit={handleOnSubmit}>\r\n                <Form.Group>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={handleOnChange}\r\n                    placeholder=\"Enter Email\"\r\n                    required\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Password </Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={handleOnChange}\r\n                        placeholder=\"password\"\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Login as:</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    value={loginType}\r\n                    onChange={(event) => setLoginType(event.target.value)}\r\n                  >\r\n                    <option value=\"\">Select one</option>\r\n                    <option value=\"admin\">Admin</option>\r\n                    <option value=\"customer\">Customer</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Button type=\"submit\">Login</Button>\r\n            </Form> \r\n            <hr />\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col>\r\n            {(\r\n              <a href=\"#!\" onClick={() => formSwitcher('reset')}>Forgot Password?</a>\r\n            )}\r\n\r\n\r\n            </Col>\r\n              \r\n            <Col>\r\n            {(\r\n                <a href=\"#!\" onClick={() => formSwitcher('signup')}>Forgot Password?</a>\r\n            )}\r\n            </Col>\r\n\r\n        </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  handleOnChange: PropTypes.func.isRequired, \r\n  handleOnSubmit: PropTypes.func.isRequired, \r\n  formSwitcher: PropTypes.func.isRequired,\r\n  email: PropTypes.string.isRequired, \r\n  password: PropTypes.string.isRequired\r\n};\r\n\r\nexport default LoginForm;\r\n\r\n\r\n\r\n\r\n\r\n// const LoginForm = ({handleOnChange, handleOnSubmit, formSwitcher, email, password}) => {\r\n//   return (\r\n//     <Container>\r\n//         <Row>\r\n//             <Col>\r\n//             <h1 className=\"text-info text-center\">Login</h1>  \r\n//             <hr />\r\n//             <Form autoComplete =\"off\" onSubmit={handleOnSubmit}>\r\n//                 <Form.Group>\r\n//                     <Form.Label>Email Address</Form.Label>\r\n//                     <Form.Control\r\n//                     type=\"email\"\r\n//                     name=\"email\"\r\n//                     value = {email}\r\n//                     onChange={handleOnChange}\r\n//                  \r\n//    placeholder=\"Enter Email\"\r\n//                     required\r\n//                     />\r\n//                 </Form.Group>\r\n\r\n//                 <Form.Group>\r\n//                     <Form.Label>Password </Form.Label>\r\n//                     <Form.Control\r\n//                         type=\"password\"\r\n//                         name=\"password\"\r\n//                         value = {password}\r\n//                         onChange = {handleOnChange}\r\n//                         placeholder=\"password\"\r\n//                         required\r\n//                     />\r\n//                 </Form.Group>\r\n//                 <Button type = \"submit\">Customer Login</Button>\r\n//             </Form> \r\n//             <hr/>\r\n//             </Col>\r\n//         </Row>\r\n//         <Row>\r\n//             <Col>\r\n//             <a href=\"#!\" onClick={() => formSwitcher('reset')}>Forgot Password?</a>\r\n//             </Col>\r\n//         </Row>\r\n      \r\n//     </Container>\r\n//   );\r\n// }\r\n// LoginForm.propTypes = {\r\n//     handleOnChange: PropTypes.func.isRequired, \r\n//     handleOnSubmit: PropTypes.func.isRequired, \r\n//     formSwitcher: PropTypes.func.isRequired,\r\n//     email: PropTypes.string.isRequired, \r\n//     password: PropTypes.string.isRequired }\r\n// export default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}