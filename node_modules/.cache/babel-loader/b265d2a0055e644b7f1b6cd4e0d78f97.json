{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Presha\\\\Desktop\\\\restaurant-management\\\\src\\\\components\\\\login\\\\LoginForm.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport PropTypes from 'prop-types';\n\nconst LoginForm = ({\n  loginType\n}) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, error && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 25\n    }\n  }, error), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 15\n    }\n  }, \"Username:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    value: username,\n    onChange: event => setUsername(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  }, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    value: password,\n    onChange: event => setPassword(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, \"Log In\"), loginType === 'admin' && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/forgot-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }\n  }, \"Forgot your password?\")));\n};\n\nexport default LoginForm; // const LoginForm = ({handleOnChange, handleOnSubmit, formSwitcher, email, password}) => {\n//   return (\n//     <Container>\n//         <Row>\n//             <Col>\n//             <h1 className=\"text-info text-center\">Login</h1>  \n//             <hr />\n//             <Form autoComplete =\"off\" onSubmit={handleOnSubmit}>\n//                 <Form.Group>\n//                     <Form.Label>Email Address</Form.Label>\n//                     <Form.Control\n//                     type=\"email\"\n//                     name=\"email\"\n//                     value = {email}\n//                     onChange={handleOnChange}\n//                     placeholder=\"Enter Email\"\n//                     required\n//                     />\n//                 </Form.Group>\n//                 <Form.Group>\n//                     <Form.Label>Password </Form.Label>\n//                     <Form.Control\n//                         type=\"password\"\n//                         name=\"password\"\n//                         value = {password}\n//                         onChange = {handleOnChange}\n//                         placeholder=\"password\"\n//                         required\n//                     />\n//                 </Form.Group>\n//                 <Button type = \"submit\">Customer Login</Button>\n//             </Form> \n//             <hr/>\n//             </Col>\n//         </Row>\n//         <Row>\n//             <Col>\n//             <a href=\"#!\" onClick={() => formSwitcher('reset')}>Forgot Password?</a>\n//             </Col>\n//         </Row>\n//     </Container>\n//   );\n// }\n// LoginForm.propTypes = {\n//     handleOnChange: PropTypes.func.isRequired, \n//     handleOnSubmit: PropTypes.func.isRequired, \n//     formSwitcher: PropTypes.func.isRequired,\n//     email: PropTypes.string.isRequired, \n//     password: PropTypes.string.isRequired }\n// export default LoginForm;","map":{"version":3,"sources":["C:/Users/Presha/Desktop/restaurant-management/src/components/login/LoginForm.js"],"names":["React","useState","Container","Row","Col","Form","Button","PropTypes","LoginForm","loginType","username","setUsername","password","setPassword","error","setError","handleSubmit","event","preventDefault","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,MAApC,QAAkD,iBAAlD;AACA,OAAQC,SAAR,MAAwB,YAAxB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AACjC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMe,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACK,GAFT;;AAII,sBACI;AAAM,IAAA,QAAQ,EAAEF,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,iBAAI;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBA,KAAtB,CADZ,eAEE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,UAFL;AAGE,IAAA,KAAK,EAAEJ,QAHT;AAIE,IAAA,QAAQ,EAAGO,KAAD,IAAWN,WAAW,CAACM,KAAK,CAACE,MAAN,CAAaC,KAAd,CAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eASE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATF,eAUE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,EAAE,EAAC,UAFL;AAGE,IAAA,KAAK,EAAER,QAHT;AAIE,IAAA,QAAQ,EAAGK,KAAD,IAAWJ,WAAW,CAACI,KAAK,CAACE,MAAN,CAAaC,KAAd,CAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAgBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,EAiBGX,SAAS,KAAK,OAAd,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,IAAI,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CAlBJ,CADJ;AAyBC,CAlCT;;AAoCQ,eAAeD,SAAf,C,CACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport  PropTypes  from 'prop-types';\r\n\r\nconst LoginForm = ({ loginType }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n            };\r\n\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n              {error && <p className=\"error\">{error}</p>}\r\n              <label htmlFor=\"username\">Username:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"username\"\r\n                value={username}\r\n                onChange={(event) => setUsername(event.target.value)}\r\n              />\r\n              <label htmlFor=\"password\">Password:</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={(event) => setPassword(event.target.value)}\r\n              />\r\n              <button type=\"submit\">Log In</button>\r\n              {loginType === 'admin' && (\r\n                <p>\r\n                  <a href=\"/forgot-password\">Forgot your password?</a>\r\n                </p>\r\n              )}\r\n            </form>\r\n          );\r\n        };\r\n        \r\n        export default LoginForm;\r\n// const LoginForm = ({handleOnChange, handleOnSubmit, formSwitcher, email, password}) => {\r\n//   return (\r\n//     <Container>\r\n//         <Row>\r\n//             <Col>\r\n//             <h1 className=\"text-info text-center\">Login</h1>  \r\n//             <hr />\r\n//             <Form autoComplete =\"off\" onSubmit={handleOnSubmit}>\r\n//                 <Form.Group>\r\n//                     <Form.Label>Email Address</Form.Label>\r\n//                     <Form.Control\r\n//                     type=\"email\"\r\n//                     name=\"email\"\r\n//                     value = {email}\r\n//                     onChange={handleOnChange}\r\n//                     placeholder=\"Enter Email\"\r\n//                     required\r\n//                     />\r\n//                 </Form.Group>\r\n\r\n//                 <Form.Group>\r\n//                     <Form.Label>Password </Form.Label>\r\n//                     <Form.Control\r\n//                         type=\"password\"\r\n//                         name=\"password\"\r\n//                         value = {password}\r\n//                         onChange = {handleOnChange}\r\n//                         placeholder=\"password\"\r\n//                         required\r\n//                     />\r\n//                 </Form.Group>\r\n//                 <Button type = \"submit\">Customer Login</Button>\r\n//             </Form> \r\n//             <hr/>\r\n//             </Col>\r\n//         </Row>\r\n//         <Row>\r\n//             <Col>\r\n//             <a href=\"#!\" onClick={() => formSwitcher('reset')}>Forgot Password?</a>\r\n//             </Col>\r\n//         </Row>\r\n      \r\n//     </Container>\r\n//   );\r\n// }\r\n// LoginForm.propTypes = {\r\n//     handleOnChange: PropTypes.func.isRequired, \r\n//     handleOnSubmit: PropTypes.func.isRequired, \r\n//     formSwitcher: PropTypes.func.isRequired,\r\n//     email: PropTypes.string.isRequired, \r\n//     password: PropTypes.string.isRequired }\r\n// export default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}