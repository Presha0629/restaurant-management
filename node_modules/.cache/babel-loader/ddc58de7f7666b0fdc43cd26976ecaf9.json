{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Presha\\\\Desktop\\\\restaurant-management\\\\src\\\\pages\\\\entry\\\\Entry.js\";\nimport React, { useState } from \"react\";\nimport { Jumbotron } from \"react-bootstrap\";\nimport LoginForm from \"../../components/LoginForm\";\nimport ResetForm from \"../../components/ResetForm\";\nimport SignupForm from \"../../components/SignupForm\";\nimport \"./entry.css\";\n\nconst Entry = () => {\n  const [name, setName] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [formLoad, setFormLoad] = useState(\"login\");\n\n  const handleOnChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n\n    if (!email || !password) {\n      return alert(\"Fill up all the field!\");\n    } // call API to submit the form\n\n\n    console.log(email, password);\n  };\n\n  const handleOnResetSubmit = e => {\n    e.preventDefault();\n\n    if (!email) {\n      return alert(\"Please enter the Email!\");\n    } // call API to submit the form\n\n\n    console.log(email);\n  };\n\n  const formSwitcher = formType => {\n    setFormLoad(formType);\n  };\n\n  const handleOnSignupSubmit = e => {\n    e.preventDefault();\n    console.log(name, email, password, confirmPassword);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Entry-page bg-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    className: \"form-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, formLoad === 'login' && /*#__PURE__*/React.createElement(LoginForm, {\n    handleOnChange: handleOnChange,\n    handleOnSubmit: handleOnSubmit,\n    formSwitcher: formSwitcher,\n    email: email,\n    password: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), formLoad === 'reset' && /*#__PURE__*/React.createElement(ResetForm, {\n    handleOnChange: handleOnChange,\n    handleOnResetSubmit: handleOnResetSubmit,\n    formSwitcher: formSwitcher,\n    email: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), formLoad === 'signup' && /*#__PURE__*/React.createElement(SignupForm, {\n    handleOnChange: handleOnChange,\n    handleOnSubmit: handleOnSignupSubmit,\n    formSwitcher: formSwitcher,\n    email: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Entry;","map":{"version":3,"sources":["C:/Users/Presha/Desktop/restaurant-management/src/pages/entry/Entry.js"],"names":["React","useState","Jumbotron","LoginForm","ResetForm","SignupForm","Entry","name","setName","confirmPassword","setConfirmPassword","email","setEmail","password","setPassword","formLoad","setFormLoad","handleOnChange","e","value","target","handleOnSubmit","preventDefault","alert","console","log","handleOnResetSubmit","formSwitcher","formType","handleOnSignupSubmit"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Jumbotron} from \"react-bootstrap\"\r\nimport LoginForm  from \"../../components/LoginForm\";\r\nimport ResetForm  from \"../../components/ResetForm\";\r\nimport SignupForm from \"../../components/SignupForm\";\r\nimport \"./entry.css\";\r\n\r\n\r\nconst Entry = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [formLoad, setFormLoad] = useState(\"login\");\r\n\r\nconst handleOnChange = (e) =>{\r\n    const {name, value} = e.target\r\n\r\n    switch(name){\r\n      case 'email':\r\n        setEmail(value);\r\n        break;\r\n      case 'password':\r\n          setPassword(value);\r\n          break;\r\n        \r\n        default:\r\n          break;\r\n    }\r\n  };\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(!email || !password)\r\n    {\r\n      return alert(\"Fill up all the field!\");\r\n    }\r\n    // call API to submit the form\r\n    console.log(email, password);\r\n  };\r\n  \r\n\r\n  const handleOnResetSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(!email)\r\n    {\r\n      return alert(\"Please enter the Email!\");\r\n    }\r\n    // call API to submit the form\r\n    console.log(email);\r\n  };\r\n  const formSwitcher = (formType) => {\r\n    setFormLoad(formType);\r\n  };\r\n\r\n  const handleOnSignupSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(name, email, password, confirmPassword);\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"Entry-page bg-info\">\r\n      <Jumbotron className=\"form-box\">\r\n        {formLoad === 'login' && \r\n        <LoginForm \r\n        handleOnChange = {handleOnChange}\r\n        handleOnSubmit = {handleOnSubmit}\r\n        formSwitcher = {formSwitcher}\r\n        email = {email}\r\n        password = {password}\r\n        />}\r\n        \r\n        \r\n\r\n        {formLoad === 'reset' && \r\n        <ResetForm \r\n        handleOnChange = {handleOnChange}\r\n        handleOnResetSubmit = {handleOnResetSubmit}\r\n        formSwitcher = {formSwitcher}\r\n        email = {email}\r\n        />}\r\n\r\n        {formLoad === 'signup' && \r\n        <SignupForm \r\n        handleOnChange = {handleOnChange}\r\n        handleOnSubmit = {handleOnSignupSubmit}\r\n        formSwitcher = {formSwitcher}\r\n        email = {email}\r\n        />}\r\n\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Entry;\r\n"]},"metadata":{},"sourceType":"module"}